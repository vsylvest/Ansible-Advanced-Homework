---
   - name: Fetch Instance Info
     os_server_facts:
      cloud: ospcloud
      region_name: RegionOne
     register: temp_result

   - name: print result
     debug:
       var: item.power_state
     loop: "{{ temp_result.ansible_facts.openstack_servers }}"

   - name: start instances if shutdown state
     os_server_action:
       cloud: ospcloud
       action: start
       server: item.name
     when: item.power_state == 0
     loop: "{{ temp_result.ansible_facts.openstack_servers }}"
 
   - name: verify SSH
     wait_for:
      host: "{{ item.public_v4 }}"
      port: 22
      search_regex: OpenSSH
      timeout: 600
     delegate_to: "{{ inventory_hostname }}"
     when: item.power_state == 0
     loop: "{{ temp_result.ansible_facts.openstack_servers }}"
 
   - name: Fetch Instance Info
     os_server_facts:
      cloud: ospcloud
      region_name: RegionOne
     register: result
     
   - name: Add host
     add_host:
      name: "{{ item.public_v4 }}"
      group: "{{ item.metadata.group }}"
      ansible_ssh_private_key_file: ~/.ssh/openstack.pem
      ansible_ssh_user: cloud-user
     with_items: "{{result.ansible_facts.openstack_servers}}"

     
   - name: Add host
     add_host:
      name: "{{ item.public_v4 }}"
      group: "{{ item.metadata.deployment_name }}"
      ansible_ssh_private_key_file: ~/.ssh/openstack.pem
      ansible_ssh_user: cloud-user
     with_items: "{{result.ansible_facts.openstack_servers}}"
     register: host
     
#   - name: print host
#     debug:
#       var: host